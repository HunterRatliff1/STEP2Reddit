{
    "collab_server" : "",
    "contents" : "---\ntitle: \"HRTC Stats\"\nauthor: \"Hunter Ratliff, @HunterRatliff1\"\ndate: \"1/25/2019\"\noutput:\n  html_document:\n    theme: united\n    toc: yes\n    toc_float: yes\n  pdf_document:\n    df_print: kable\n    highlight: tango\n    toc: yes\n---\n\nIf you'd like the source *data*, reach out to the [BHAR](https://www.utmb.edu/bhar/about-us/bhar-team)\noffice or DM me on [Twitter](https://twitter.com/HunterRatliff1)\n\n```{r setup, include=T, echo=T, collapse=T, warning=F, message=F}\nknitr::opts_chunk$set(warning=F, message=F, echo=T)\n\nrequire(MASS)\nrequire(tidyverse)\nrequire(lubridate)\nrequire(readr)\nrequire(ggplot2)\nrequire(knitr)\nrequire(scales)\nlibrary(stargazer)\n\nlibrary(lme4)\nrequire(survival)\nlibrary(survminer)\nlibrary(survMisc)\nlibrary(pander)\n\npanderOptions(\"table.alignment.default\", \"left\")\n\nusers <- readRDS(\"Data/users.RDS\") %>%\n  mutate(SurvEnd2 = ifelse(SurvEnd > 135, 135, SurvEnd))\n  \n\nHRTC <- readRDS(\"Data/MergedDf2.RDS\") %>%\n  mutate(Type = ifelse(campg.day %in% c(26), \"Knowledge w/ EX\", Type)) %>% # Recode this hotline as MORE\n  mutate(Type = ifelse(campg.day %in% c(63,82,86,124), \"Knowledge w/ EX\", Type)) %>% # Recode this fact as MORE\n  filter(campg.day < SurvEnd) %>% \n  filter(Type!=\"Open-ended\") %>%\n  group_by(userID) %>% \n  mutate(userResponses = sum(Replied, na.rm = T)) %>%\n  ungroup() %>%\n  mutate(\n    Type = recode(Type, \"Agree/disagree\"=\"T/F\"),\n    Type = recode(Type, \"Knowledge w/ more info\"=\"Knowledge w/ EX\")\n  )\n\n\nuser.ids <- sample_n(count(HRTC, userID),10)$userID\n\nHRTC[HRTC$mid==\"m032\",]$Category <- \"Partner\"\nHRTC[HRTC$mid==\"m038\",]$Category <- \"Partner\"\nHRTC[HRTC$mid==\"m061\",]$Category <- \"Abuse/IPV\"\n\nHRTC <- HRTC %>%\n  mutate(Tag = Keywords) %>%\n  mutate(Tag = ifelse(stringr::str_detect(Tag, \"Cyber\"), \"Cyber\", Tag)) %>% \n  mutate(Tag = ifelse(stringr::str_detect(Tag, \"Consent\"), \"Consent\", Tag)) %>% \n  mutate(Tag = ifelse(stringr::str_detect(Tag, \"Individuality\"), \"Individuality\", Tag)) %>% \n  mutate(Tag = ifelse(stringr::str_detect(Tag, \"Stalking\"), \"Stalking\", Tag)) %>% \n  mutate(Tag = ifelse(stringr::str_detect(Tag, \"Emotional\"), \"Emotional\", Tag))\n\n```\n\n\n\n```{r MakeConTable}\ndf <- HRTC %>% \n  mutate(Replied = as.character(Replied)) %>%\n  mutate(\n    Replied = recode(Replied, \"0\"=\"No\"),\n    Replied = recode(Replied, \"1\"=\"Yes\")\n    ) %>% \n  count(campg.day, Type, Replied) %>%\n  spread(Replied, n) %>%\n  group_by(Type) %>%\n  summarise(Yes = sum(Yes, na.rm=T), No=sum(No, na.rm=T)) %>%\n  mutate(\n    `Reply %` = Yes/(Yes+No),\n    n         = Yes + No\n  )\n\nconTable <- as.table(rbind(df$Yes, df$No))\ndimnames(conTable) <- list(Replied = c(\"Yes\", \"No\"),\n                           qType = df$Type)\n```\n\n# Graph of response rate to each question type\n\nHere's just an overview of the crude percent of people who responded to each \nquestion type:\n\n```{r qType_table}\ndf %>% mutate(`Reply %` = percent(`Reply %`)) %>% kable()\n```\n\n```{r qType_graph, fig.height=4}\ndf %>% ggplot(aes(x=Type, y=`Reply %`, fill=n)) +\n  geom_col() +\n  ggthemes::scale_fill_continuous_tableau(palette = \"Blue\") + \n  scale_y_continuous(labels=percent) + coord_flip()\n```\n\n\n\n\n\n# \\textcolor{red}{Chi-Squared}\n\n**TODO:** Effect size..?\n\n## Contengency table \n\nContengency table of responded (yes, no) vs the type of question\n\n```{r conTable}\nkable(conTable)\n```\n\n\n## Test Results\n\nHere's the test results\n\n```{r chiSquared, echo=T, collapse=T}\nchisq.test(conTable)\nchisq.test(conTable, simulate.p.value = TRUE, B = 10000)\n```\n\n```{r chiSquaredPlot, eval=F}\nfifer::chisq.plot(conTable)\n```\n\n\n\n## Residuals\n\n```{r residualsChi2}\nchisq.test(conTable)$residuals %>%\n  round(2) %>% kable()\n```\n\n## Post-hoc analysis\n\nUsing Fisher's Exact. Agrees nicely with the results from the logistic regression (next section)\n\n```{r postHoc_bonferroni}\nfifer::chisq.post.hoc(t(conTable), control = \"bonferroni\", digits = 8) %>% pander()\n```\n\n```{r postHoc_fdr}\n## Fisher's Exact\n# fisher.test(conTable,simulate.p.value=TRUE,B=1e7)\nfifer::chisq.post.hoc(t(conTable), control = \"fdr\", digits = 8) %>% pander()\n```\n\n\n\n\n# \\textcolor{red}{Binomial}\n\nNote: These regressions are run on students who responded **at least** once\n\nSome resources for binomal regression (for my reference):\n\n* [Logit / Probit](https://www.princeton.edu/~otorres/LogitR101.pdf)\n* [Multilevel Modeling in R](https://rpubs.com/rslbliss/r_mlm_ws) \n* [Intro to Generalized linear mixed models](https://stats.idre.ucla.edu/r/dae/mixed-effects-logistic-regression/)\n\n## \\textcolor{blue}{Logit model}\n\nRun a bimodal regression based on `Question type` + `grade` + `race` + `gender` \n+ `number of user's responses` + `Campaign number`  (e.g. is it the first message \nsent, second sent, last message sent in the campaign). \n*In the future, can look at how category and/or keywords play into this.*\n\nThe next table (\\textcolor{blue}{Table 6}) shows the model in a more pretty table \nformat. \\textcolor{blue}{Table 7} shows the same model, but with an output more\nsimilar to SPSS. \n\n```{r Bimodal}\ndf <- HRTC %>% \n  filter(userResponses>0) %>%\n  # filter(Type!=\"Knowledge\") %>%\n  mutate(Dummy = as.factor(zipcode)) %>%\n  mutate(userID = as.factor(userID)) %>%\n  mutate(Category = as.factor(Category)) %>%\n  mutate(Replied = ifelse(Replied==1, \"Yes\", \"No\")) %>%\n  mutate(Replied = factor(Replied, levels=c(\"No\",\"Yes\")))\n\nmod <- glm(Replied ~ Type + grade + race + gender + userResponses + campg.num, \n           data=df, family=binomial(link = \"logit\"))\n# round(exp(coef(mod)),4)\n```\n\n\n```{r bimodalPander}\npander(mod)\n```\n\n```{r bimodalSPSSpander, eval=T}\n# summary(mod)\nmod.table <- as.data.frame(summary(mod)$coefficients) %>%\n  mutate(`Exp(Estimate)` = exp(Estimate))\n\nmod.exp.ci <- exp(confint(mod)) # Using MASS package\n\nx <- cbind(mod.table, mod.exp.ci) %>%\n  rownames_to_column() %>%\n  mutate_if(is.double, round, 4) %>%\n  rename(`Exp(B) Lower95CI`=`2.5 %`) %>%\n  rename(`Exp(B) Upper95CI`=`97.5 %`) %>%\n  column_to_rownames() %>%\n  as.matrix()\n\n# mod.summary <- summary(mod)\n# mod.summary$coefficients <- x\n# mod.summary\npander(x)\nrm(mod.table, mod.exp.ci, x)\n```\n\n```{r bimodalStar, results='asis', eval=F}\nstargazer(mod, type='latex', title=\"Log-odds\",\n          single.row=T, intercept.top=T, intercept.bottom=F)\n```\n\n```{r modelStarExp, results='asis', eval=F}\n# stargazer(mod, coef=list(exp(coef(mod))), p.auto=FALSE, type = 'latex', \n#           single.row=T, intercept.top=T, intercept.bottom=F, title=\"Exponential Log odds\")\nstargazer(mod, apply.coef=exp, apply.se=exp, type=\"latex\", p.auto=F, \n          single.row=T, intercept.top=T, intercept.bottom=F, title=\"Exponential of Log odds\")\n```\n\n```{r bimodalOutput, eval=F}\nsummary(mod)\n```\n\n\n```{r mod_plots, fig.height=7, eval=F}\nanova(mod, test=\"Chisq\") #see ?anova.glm\npar(mfrow = c(2, 2))\nplot(mod)\n```\n\n### Prediction \n\nBased on modeling only the significant variables from above, which has a higher \nAIC (second model's AIC=`12,331`) than the model above (AIC=`8,090`). Note that\nthe figure shows three points in time (beginning, midpoint, and end), but assumes\n`userResponses` is the same across the board\n\n\n```{r predict_mod2}\nmod2 <- glm(Replied ~ Type + userResponses + campg.num, \n           data=df, family=binomial(link = \"logit\"))\n\nnewDf <- data.frame(\n  userResponses = rep(mean(df$userResponses),15),\n  campg.num     = c(rep(min(df$campg.num),5), rep(mean(df$campg.num),5), rep(max(df$campg.num),5)),\n  Time          = c(rep(\"Start\",5), rep(\"Midpoint\",5), rep(\"End\",5)),\n  Type = rep(unique(df$Type),3)\n)\n\ncbind(newDf, predict(mod2, newdata=newDf, type=\"response\", se.fit=TRUE)) %>%\n  rename(prob=fit, se.prob=se.fit) %>%\n  mutate(\n    ll = prob - 1.96*se.prob,\n    ul = prob + 1.96*se.prob,\n  ) %>%\n  ggplot(aes(x=Type, y = prob)) +\n  geom_errorbar(aes(ymin = ll, ymax = ul, color=Time), width = 0.2, lty=1, lwd=1) +\n  geom_point(shape=18, size=3, fill=\"black\") +\n  scale_color_discrete(name=\"Time during campaign\") + \n  labs(title= \" Predicted probabilities\", x=\"Question Type\", y=\"Pr(respond to message)\") \n\nrm(newDf, mod2)  \n```\n\n\n\n## \\textcolor{blue}{Multilevel logit model}\n\nThe next output below models the **fixed effects** of variables of interest \n(e.g. question type) while  accounting for **random effects** (`userID`). Note: \nthe model doesn't converge  if gender, race, or grade is included, presumably \nbecause those effects are  accounted for in the random effects of the userID\n\n```{r Multilevel_logit}\ndf <- HRTC %>% \n  filter(userResponses>0) %>%\n  mutate(Dummy = as.factor(zipcode)) %>%\n  mutate(userID = as.factor(userID)) %>%\n  mutate(Replied = ifelse(Replied==1, \"Yes\", \"No\")) %>%\n  mutate(Replied = factor(Replied, levels=c(\"No\",\"Yes\")))\n\nmultiMod <- glmer(Replied ~ Type + (1 | userID), \n                  data=df, family=binomial(link = \"logit\"))\n                  # control=glmerControl(optimizer = \"bobyqa\", optCtrl = list(maxfun = 10000)))\n  \nsummary(multiMod)\n\n# Basic        AIC = 11,174\n# Gender       AIC = 8,037\n# Grade        AIC = 7,861 (no convergence)\n# Race         AIC = 8,105 (no convergence)\n# Gender grade AIC = 7,574 (no convergence)\n```\n\n```{r multiMod_plots, eval=F}\nplot(multiMod)\nlattice::qqmath(multiMod)\n```\n\n```{r multiModel_predict, eval=F}\n# Consider using broom::augment.glm()\nnewDf <- data.frame(\n  userID = unique(df$userID),\n  Type = rep(unique(df$Type),414)\n)\n\ncbind(newDf, prob=predict(multiMod, newdata=newDf)) %>%\n  mutate(prob= exp(prob)) %>%\n  filter(prob<1) %>%\n  ggplot(aes(x=Type, y=prob)) + geom_boxplot(varwidth=T)\n\n```\n\n\n# \\textcolor{red}{Survival analysis}\n\nSome resources for survival analysis (for my reference):\n\n* [Comparing survival times between groups](https://www.emilyzabor.com/tutorials/survival_analysis_in_r_tutorial.html#comparing_survival_times_between_groups)\n\n\n\n\n```{r survOverall, include=F}\nsurvObj <- Surv(time=users$SurvEnd2, event=users$Censor)\n\nsurvfit(survObj ~ 1, data = df) %>% summary() # End of campaign day 128\n\nsummary(survfit(survObj ~ 1, data = df))\n\nsummary(survfit(survObj ~ 1, data = df), times=26)  # Half of those who will drop out, have dropped out\nsummary(survfit(survObj ~ 1, data = df), times=65)  # midpoint of campaign\nsummary(survfit(survObj ~ 1, data = df), times=131) # End of campaign\n\n```\n\n\n## Gender\n\n```{r survGender, fig.height=9}\ndf <- users %>%\n  filter(gender!=\"Other\")\nsurvObj <- Surv(time=df$SurvEnd2, event=df$Censor)\n\nsurvfit(survObj ~ gender, data = df) %>%\n  ggsurvplot(data = df, pval=T, #conf.int=T,\n             risk.table = TRUE,\n             fun = \"pct\",\n             size = 1,\n             legend = \"bottom\")\n  \n  # ggsurv() + \n  # scale_y_continuous(labels = scales::percent) +\n  # scale_x_continuous(name=\"Days into campaign\") + \n  # scale_color_brewer(palette=\"Set2\", na.value = \"grey50\")\n```\n\n## Grade\n\n```{r survGrade, fig.height=9}\ndf <- users  %>%\n  filter(grade!=\"other\")\nsurvObj <- Surv(time=df$SurvEnd2, event=df$Censor)\n\nsurvfit(survObj ~ grade, data = df) %>%\n  ggsurvplot(data = df, pval=T, #conf.int=T,\n             risk.table = TRUE,\n             fun = \"pct\",\n             size = 1,\n             legend = \"bottom\")\n```\n\n## Race\n\n```{r survRace, fig.height=9}\ndf <- users \nsurvObj <- Surv(time=df$SurvEnd2, event=df$Censor)\n\nsurvfit(survObj ~ race, data = df) %>%\n  ggsurvplot(data = df, pval=T, #conf.int=T,\n             risk.table = TRUE,\n             fun = \"pct\",\n             size = 1,\n             legend = \"bottom\")\n```\n\n## Combo\n\n```{r survCombo, eval=F}\ndf <- users  %>%\n  filter(grade!=\"other\", gender!=\"Other\")\nsurvObj <- Surv(time=df$SurvEnd2, event=df$Censor)\n\n# Fit a Cox proportional hazards model\ncoxph(survObj ~ grade + race, data=df) %>% summary()\n\n```\n\n\n```{r SPSS_export, eval=F}\n# Export to SPSS\n# HRTC %>% filter(userResponses>1) %>% select(userID, message_id, Type, mid, Replied:userResponses) %>% write_csv(\"~/Downloads/data.csv\")\n```\n\n\n# \\textcolor{red}{Descriptive statistics}\n\nSo there's quite a few `NA`'s (people who didn't have their gender, grade, or race \nrecorded). A few people did respond to the gender & grade questions, but didn't\nfit into a larger category, so I dropped them from the analysis (total of 7 students)\n\nTotal number of students: <b>`r length(count(HRTC, userID)$userID)`</b>\n\n## Gender\n\n```{r gender}\nusers %>% \n  semi_join(count(HRTC, userID)) %>%\n  count(gender, sort=T) %>% \n  \n  mutate(sansNA = ifelse(is.na(gender),0,n)) %>%\n  mutate(gender = ifelse(is.na(gender),\"NA\",as.character(gender))) %>%\n  filter(gender!=\"Other\") %>%\n  mutate(sansNA = percent(sansNA/sum(sansNA))) %>%\n  mutate(Percent = percent(n/sum(n))) %>% \n  \n  # select(gender, n, Percent, sansNA) %>%\n  kable()\n```\n\n\n## Grade\n\n```{r grade}\n\nusers %>% \n  semi_join(count(HRTC, userID)) %>%\n  count(grade, sort=T) %>% \n  \n  mutate(sansNA = ifelse(is.na(grade),0,n)) %>%\n  mutate(grade = ifelse(is.na(grade),\"NA\",as.character(grade))) %>%\n  filter(grade!=\"other\") %>%\n  mutate(sansNA = percent(sansNA/sum(sansNA))) %>%\n  mutate(Percent = percent(n/sum(n))) %>% \n  \n  kable()\n\n```\n\n\n## Race\n\nNote that unlike gender & grade, I didn't drop the `Other` race because it's\nrepresenting `Two or more races`\n\n```{r race}\nusers %>% \n  semi_join(count(HRTC, userID)) %>%\n  count(race, sort=T) %>% \n  \n  mutate(sansNA = ifelse(is.na(race),0,n)) %>%\n  mutate(race = ifelse(is.na(race),\"NA\",as.character(race))) %>%\n  mutate(sansNA = percent(sansNA/sum(sansNA))) %>%\n  mutate(Percent = percent(n/sum(n))) %>% \n  \n  kable()\n```\n\nCompare to [Census data](https://www.census.gov/quickfacts/fact/table/galvestoncitytexas,US/RHI725217) \n(2017 ACS 5-year estimates) from Galveston County:\n\n\n```{r ACS}\n\ndata_frame(\n  Race = c(\"White (non-Hispanic)\", \"Hispanic or Latino\",\n           \"Black or African American\", \"Asian\", \"Two or more races\", \n           \"American Indian and Alaska Native\"),\n  Percent = c(0.459, 0.287, 0.208, 0.032, 0.025, 0.005)\n) %>%\n  mutate(Percent = percent(Percent)) %>%\n  # arrange(desc(Percent))\n  kable()\n\n```\n\n\n# Session info\n\n```{r Sessioninfo}\npander(sessionInfo())\n```\n\n",
    "created" : 1563297913979.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2273230839",
    "id" : "94501260",
    "lastKnownWriteTime" : 1552183475,
    "last_content_update" : 1552183475,
    "path" : "~/Github/HRTC_Shiny/PosterStats.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}